syntax = "proto3"; //1. The service definition begins with specifying the protocol buffer version (proto3) that we use
package ecommerce; //2. Package names are used to prevent name clashes between protocol message types and also will be used to generate code

service ProductInfo { //3. Defining the service interface of a gRPC service
    rpc addProduct(Product) returns (ProductID); //4. Remote method to add a product that returns the product ID as the response
    rpc getProduct(ProductID) returns (Product); //5. Remote method to get a product based on the product ID
}

message Product { //6. Definition of the message format/type of Product
    string id = 1; //7. Field(name-value pair) that holds the product ID with unique field numbers that are used to identify your fields in the message binary format
    string name = 2;
    string description = 3;
}

message ProductID { //8. User-defined type for product identification number
    string value = 1;
}
